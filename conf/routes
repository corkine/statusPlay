GET     /                                  controllers.Default.todo
# [Public]
GET     /status                            controllers.Default.redirect(to="/status/data")
GET     /status/                           controllers.Default.redirect(to="/status/data")
GET     /status/data                       controllers.ActivityController.all(lastDay:Option[Long])
# [Admin]
GET     /status/schema                     controllers.ActivityController.schema
GET     /status/websiteAdd                 controllers.ActivityController.addWebsite(name:String,url:String,note:Option[String],priority:Option[Int])
GET     /status/:websiteId/delete          controllers.ActivityController.deleteWebsite(websiteId:Long)
GET     /status/:websiteId/update          controllers.ActivityController.updateWebsite(websiteId:Long,name:Option[String],url:Option[String],note:Option[String],priority:Option[Int])
# [User]
GET     /status/:websiteId/activities      controllers.ActivityController.checkActivities(websiteId:Long,skip:Option[Int],limit:Option[Int])

# [User]
POST    /fitness/iOSUpload              controllers.FitnessController.insert
GET     /fitness                        controllers.Default.redirect(to="/fitness/data")
GET     /fitness/                       controllers.Default.redirect(to="/fitness/data")
GET     /fitness/data                   controllers.FitnessController.all(category:Option[String],lastDays:Option[Int],durationBiggerSeconds:Option[Long],skip:Option[Long],limit:Option[Long])
# [Admin]
GET     /fitness/schema                 controllers.FitnessController.schema

GET     /goods/schema                   controllers.GoodsController.schema
GET     /goods                          controllers.Default.redirect(to="/goods/data")
GET     /goods/                         controllers.Default.redirect(to="/goods/data")
GET     /goods/data                     controllers.GoodsController.goodsAll(lastDay:Option[Int],recentFirst:Option[Boolean],skip:Option[Long],take:Option[Long])
GET     /goods/:goodId                  controllers.GoodsController.good(goodId)
GET     /goods/:goodId/delete           controllers.GoodsController.deleteGood(goodId)
GET     /goods/:goodId/details          controllers.GoodsController.goodDetail(goodId)
POST    /goods/add                      controllers.GoodsController.goodAdd
POST    /goods/:goodId/update           controllers.GoodsController.goodEdit(goodId)

GET     /foods/schema                   controllers.FoodsController.schema
GET     /foods                          controllers.Default.redirect(to="/foods/data")
GET     /foods/                         controllers.Default.redirect(to="/foods/data")
GET     /foods/data                     controllers.FoodsController.foodsAll(lastDay:Option[Int],recentFirst:Option[Boolean],skip:Option[Long],take:Option[Long])
GET     /foods/search                   controllers.FoodsController.foods(like:String,recentDay:Option[Int])
GET     /foods/details                  controllers.FoodsController.foodsDetail(today:Option[Boolean],week:Option[Boolean],month:Option[Boolean],day:Option[Int],kind:Option[String])
GET     /foods/:foodId                  controllers.FoodsController.food(foodId)
GET     /foods/:foodId/delete           controllers.FoodsController.deleteFood(foodId)
GET     /foods/:foodId/details          controllers.FoodsController.foodDetail(foodId)
POST    /foods/add                      controllers.FoodsController.foodAdd
POST    /foods/:foodId/update           controllers.FoodsController.foodEdit(foodId)

GET     /assets/*file                   controllers.Assets.versioned(path="/public", file: Asset)